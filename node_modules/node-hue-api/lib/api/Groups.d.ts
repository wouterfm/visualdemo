export = Groups;
declare const Groups_base: {
    new (hueApi: any): import("./http/ApiDefinition");
};
declare class Groups extends Groups_base {
    constructor(hueApi: any);
    _groupStateLimiter: any;
    /**
     * Gets all the groups from the bridge.
     * @returns {Promise<Array<Entertainment|LightGroup|Lightsource|Luminaire|Room|Zone>>}
     */
    getAll(): Promise<(import("../model/groups/Entertainment") | import("../model/groups/LightGroup") | import("../model/groups/Lightsource") | import("../model/groups/Luminaire") | import("../model/groups/Room") | import("../model/groups/Zone"))[]>;
    /**
     * @param id {int | Group}
     * @returns {Promise<Entertainment|LightGroup|Lightsource|Luminaire|Room|Zone>}
     */
    getGroup(id: any): Promise<import("../model/groups/Entertainment") | import("../model/groups/LightGroup") | import("../model/groups/Lightsource") | import("../model/groups/Luminaire") | import("../model/groups/Room") | import("../model/groups/Zone")>;
    /**
     * @param id {int | Group}
     * @returns {Promise<Array<Entertainment|LightGroup|Lightsource|Luminaire|Room|Zone>>}
     */
    get(id: any): Promise<(import("../model/groups/Entertainment") | import("../model/groups/LightGroup") | import("../model/groups/Lightsource") | import("../model/groups/Luminaire") | import("../model/groups/Room") | import("../model/groups/Zone"))[]>;
    /**
     * @deprecated Use getGroupByName(name) instead.
     * @param name {string}
     * @returns {Promise<Entertainment|LightGroup|Lightsource|Luminaire|Room|Zone>}
     */
    getByName(name: string): Promise<import("../model/groups/Entertainment") | import("../model/groups/LightGroup") | import("../model/groups/Lightsource") | import("../model/groups/Luminaire") | import("../model/groups/Room") | import("../model/groups/Zone")>;
    /**
     * @param name {string}
     * @returns {Promise<Array<Entertainment|LightGroup|Lightsource|Luminaire|Room|Zone>>}
     */
    getGroupByName(name: string): Promise<(import("../model/groups/Entertainment") | import("../model/groups/LightGroup") | import("../model/groups/Lightsource") | import("../model/groups/Luminaire") | import("../model/groups/Room") | import("../model/groups/Zone"))[]>;
    /**
     * Creates a group
     * @param group {Entertainment | LightGroup | Room | Zone | Group}
     * @returns {Promise<Group>} The Group that was created on the bridge.
     */
    createGroup(group: import("../model/groups/Group") | import("../model/groups/Entertainment") | import("../model/groups/LightGroup") | import("../model/groups/Room") | import("../model/groups/Zone"), ...args: any[]): Promise<import("../model/groups/Group")>;
    /**
     * @deprecated use createGroup(group) instead
     */
    createRoom(name: any, lights: any, roomClass: any): Promise<import("../model/groups/Group")>;
    /**
     * @deprecated use createGroup(group) instead
     */
    createZone(name: any, lights: any, roomClass: any): Promise<import("../model/groups/Group")>;
    /**
     * Update the Group attributes on the bridge for the specified Group object.
     * @param group {Group} The group with updates to be updated on the bridge.
     * @returns {Promise<boolean>}
     */
    updateGroupAttributes(group: import("../model/groups/Group")): Promise<boolean>;
    /**
     * Update the Group attributes on the bridge for the specified Group object.
     * @param group {Group} The group with updates to be updated on the bridge.
     * @returns {Promise<boolean>}
     */
    updateAttributes(id: any, data: any): Promise<boolean>;
    /**
     *
     * @param id {number | Group | LightGroup | Zone | Room | Entertainment} The id or Group instance to delete
     * @returns {Promise<boolean>}
     */
    deleteGroup(id: number | import("../model/groups/Group") | import("../model/groups/Entertainment") | import("../model/groups/LightGroup") | import("../model/groups/Room") | import("../model/groups/Zone")): Promise<boolean>;
    /**
     * @param id {int | Group}
     * @returns {Promise<Object>}
     */
    getGroupState(id: any): Promise<Object>;
    /**
     *
     * @param id {int | Group}
     * @param state {GroupLightState | Object}
     * @returns {Promise<*>>}
     */
    setGroupState(id: any, state: any): Promise<any>;
    /**
     * @returns {Promise<LightGroup[]>}
     */
    getLightGroups(): Promise<import("../model/groups/LightGroup")[]>;
    /**
     * @returns {Promise<Luminaire[]>}
     */
    getLuminaries(): Promise<import("../model/groups/Luminaire")[]>;
    /**
     * @returns {Promise<Lightsource[]>}
     */
    getLightSources(): Promise<import("../model/groups/Lightsource")[]>;
    /**
     * @returns {Promise<Room[]>}
     */
    getRooms(): Promise<import("../model/groups/Room")[]>;
    /**
     * @returns {Promise<Zone[]>}
     */
    getZones(): Promise<import("../model/groups/Zone")[]>;
    /**
     * @returns {Promise<Entertainment[]>}
     */
    getEntertainment(): Promise<import("../model/groups/Entertainment")[]>;
    /**
     * Enables the streaming functionality on an Entertainment Group
     * @param id {int | Entertainment}
     * @returns {Promise<boolean>}
     */
    enableStreaming(id: any): Promise<boolean>;
    /**
     * Disabled the streaming functionality on an Entertainment Group
     * @param id {int | Entertainment}
     * @returns {Promise<boolean>}
     */
    disableStreaming(id: any): Promise<boolean>;
    _getByType(type: any): Promise<(import("../model/groups/Entertainment") | import("../model/groups/LightGroup") | import("../model/groups/Lightsource") | import("../model/groups/Luminaire") | import("../model/groups/Room") | import("../model/groups/Zone"))[]>;
}
declare namespace Groups {
    export { Entertainment, Group, LightGroup, Lightsource, Luminaire, Room, Zone };
}
type Entertainment = import("../model/groups/Entertainment");
type Group = import("../model/groups/Group");
type LightGroup = import("../model/groups/LightGroup");
type Lightsource = import("../model/groups/Lightsource");
type Luminaire = import("../model/groups/Luminaire");
type Room = import("../model/groups/Room");
type Zone = import("../model/groups/Zone");
