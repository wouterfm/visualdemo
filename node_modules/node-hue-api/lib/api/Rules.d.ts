export = Sensors;
declare const Sensors_base: {
    new (hueApi: any): import("./http/ApiDefinition");
};
declare class Sensors extends Sensors_base {
    constructor(hueApi: any);
    /**
     * @returns {Promise<Rule[]>}
     */
    getAll(): Promise<any[]>;
    /**
     * @param id {int | Rule}
     * @returns {Promise<Rule>}
     */
    getRule(id: any): Promise<any>;
    /**
     * @deprecated since 4.x, use getRule(id) instead
     */
    get(id: any): Promise<any>;
    /**
     * @param name {string}
     * @returns {Promise<Rule[]>}
     */
    getRuleByName(name: string): Promise<any[]>;
    /**
     * @param rule {Rule}
     * @returns {Promise<Rule>}
     */
    createRule(rule: any): Promise<any>;
    /**
     * @param id {int | Rule}
     * @returns {Promise<boolean>}
     */
    deleteRule(id: any): Promise<boolean>;
    /**
     *
     * @param rule {Rule}
     * @returns {Promise<*>}
     */
    updateRule(rule: any): Promise<any>;
    _filterRules(fn: any): Promise<any[]>;
}
