export = Scenes;
declare const Scenes_base: {
    new (hueApi: any): import("./http/ApiDefinition");
};
declare class Scenes extends Scenes_base {
    constructor(hueApi: any);
    /**
     * @returns {Promise<(LightScene | GroupScene)[]>}
     */
    getAll(): Promise<(import("../model/scenes/LightScene") | import("../model/scenes/GroupScene"))[]>;
    /**
     * @deprecated since 4.x use getScene(id) instead.
     */
    get(id: any): Promise<import("../model/scenes/LightScene") | import("../model/scenes/GroupScene")>;
    /**
     * @param id {string | LightScene | GroupScene}
     * @returns {Promise<LightScene | GroupScene>}
     */
    getScene(id: string | import("../model/scenes/LightScene") | import("../model/scenes/GroupScene")): Promise<import("../model/scenes/LightScene") | import("../model/scenes/GroupScene")>;
    /**
     * @deprecated since 4.x use getSceneByName(name) instead.
     */
    getByName(name: any): Promise<(import("../model/scenes/LightScene") | import("../model/scenes/GroupScene"))[]>;
    /**
     * Obtains the scenes that have the specified name from the bridge.
     * @param name {string}
     * @returns {Promise<(LightScene | GroupScene)[]>}
     */
    getSceneByName(name: string): Promise<(import("../model/scenes/LightScene") | import("../model/scenes/GroupScene"))[]>;
    /**
     * @param scene {LightScene | GroupScene}
     * @returns {Promise<(LightScene | GroupScene)>}
     */
    createScene(scene: import("../model/scenes/LightScene") | import("../model/scenes/GroupScene")): Promise<import("../model/scenes/LightScene") | import("../model/scenes/GroupScene")>;
    /**
     * @deprecated since 4.x use updateScene(scene) instead.
     */
    update(id: any, scene: any): Promise<any>;
    /**
     * @param scene {LightScene | GroupScene}
     * @returns {Promise<Object>}
     */
    updateScene(scene: import("../model/scenes/LightScene") | import("../model/scenes/GroupScene")): Promise<Object>;
    /**
     * Updates the light state for a specific light in the scene
     * @param id {string | LightScene | GroupScene}
     * @param lightId {int | Light}
     * @param sceneLightState {SceneLightState}
     * @returns {Promise<object>}
     */
    updateLightState(id: string | import("../model/scenes/LightScene") | import("../model/scenes/GroupScene"), lightId: any, sceneLightState: any): Promise<object>;
    /**
     * @param id {string | Scene}
     * @returns {Promise<boolean>}
     */
    deleteScene(id: any): Promise<boolean>;
    /**
     * @param id {string | LightScene | GroupScene}
     * @returns {Promise<boolean>}
     */
    activateScene(id: string | import("../model/scenes/LightScene") | import("../model/scenes/GroupScene")): Promise<boolean>;
}
declare namespace Scenes {
    export { LightScene, GroupScene };
}
type LightScene = import("../model/scenes/LightScene");
type GroupScene = import("../model/scenes/GroupScene");
