export = Configuration;
declare const Configuration_base: {
    new (hueApi: any): import("./http/ApiDefinition");
};
declare class Configuration extends Configuration_base {
    constructor(hueApi: any);
    /**
     * Obtains the complete configuration from the Hue Bridge in a raw Object format that is returned from the API.
     * This function will return all the config along with all the lights, schedules, groups, scenes, resourcelinks, etc...
     *
     * @returns {Promise<any>} The raw data returned from the Hue Bridge
     */
    getAll(): Promise<any>;
    /**
     * Gets the unauthenticated configuration data from the bridge.
     * @returns {Promise<any>} The unauthenticated configuration data from the bridge.
     */
    getUnauthenticatedConfig(): Promise<any>;
    /**
     * Updates a configuration value for the Hue Bridge.
     * @param data {Object | BridgeConfiguration} An Object (or BridgeConfiguration) representing the data that is to be
     * updated for the bridge configuration.
     * @deprecated Use updateConfiguration() instead
     * @returns {Promise<boolean>}
     */
    update(data: any): Promise<boolean>;
    /**
     * Updates a configuration value for the Hue Bridge.
     * @param data {Object | BridgeConfiguration} An Object (or BridgeConfiguration) representing the data that is to be
     * updated for the bridge configuration.
     * @returns {Promise<boolean>}
     */
    updateConfiguration(data: any): Promise<boolean>;
    /**
     * Obtains the configuration of the Hue Bridge.
     * @returns {Object} A object representing the configuration properties of the Hue Bridge.
     * @deprecated Use getConfiguration() instead.
     */
    get(): Object;
    /**
     * Obtains the configuration of the Hue Bridge.
     * @returns {Promise<Object>} A object representing the configuration properties of the Hue Bridge.
     */
    getConfiguration(): Promise<Object>;
    /**
     * A virtual press of the link button to perform pairing of software/services. This no longer works on the local
     * network connection due to security implications which led to it being disabled by Hue developers.
     *
     * This will function if you are using the library over the remote API/portal though.
     *
     * @returns {Promise<boolean>}
     */
    pressLinkButton(): Promise<boolean>;
}
declare namespace Configuration {
    export { exports };
}
/**
 * Interacts with the Hue Bridge Configuration.
 */
type exports = any;
