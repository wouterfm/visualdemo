export var lightStates: {
    LightState: {
        new (): import("./lightstate/LightState");
    };
    GroupLightState: {
        new (): import("./lightstate/GroupState");
    };
    SceneLightState: {
        new (): import("./lightstate/SceneLightState");
    };
};
export var timePatterns: {
    weekdays: {
        MONDAY: number;
        TUESDAY: number;
        WEDNESDAY: number;
        THURSDAY: number;
        FRIDAY: number;
        SATURDAY: number;
        SUNDAY: number;
        WEEKDAY: number;
        WEEKEND: number;
        ALL: number;
    };
    isRecurring(value: any): boolean;
    createAbsoluteTime(value: any): import("./timePatterns/AbsoluteTime");
    createRandomizedTime(value: any): import("./timePatterns/RandomizedTime");
    createRecurringTime(weekdays: any, value: any): import("./timePatterns/RecurringTime");
    createRecurringRandomizedTime(value: any): import("./timePatterns/RecurringRandomizedTime");
    createTimeInterval(value: any): import("./timePatterns/TimeInterval");
    createTimer(value: any): import("./timePatterns/Timer");
    createRecurringTimer(value: any): import("./timePatterns/RecurringTimer");
    createRandomizedTimer(value: any): import("./timePatterns/RandomizedTimer");
    createRecurringRandomizedTimer(value: any): import("./timePatterns/RecurringRandomizedTimer");
    createFromString(str: any): import("./timePatterns/AbsoluteTime") | import("./timePatterns/RandomizedTime") | import("./timePatterns/RecurringTime") | import("./timePatterns/Timer") | import("./timePatterns/RecurringTimer") | import("./timePatterns/RandomizedTimer") | import("./timePatterns/RecurringRandomizedTimer");
    isTimePattern(str: any): boolean;
};
export function isLightInstance(obj: any): boolean;
export function isSceneInstance(obj: any): boolean;
export function isGroupSceneInstance(obj: any): boolean;
export function isLightSceneInstance(obj: any): boolean;
export function isRuleInstance(obj: any): boolean;
export function isResourceLinkInstance(obj: any): boolean;
export function isScheduleInstance(obj: any): boolean;
export function isSensorInstance(obj: any): boolean;
export function isGroupInstance(obj: any): boolean;
export function isBridgeConfigurationInstance(obj: any): boolean;
export function createBridgeConfiguration(): import("./BridgeConfiguration");
export function createEntertainment(): import("./groups/Entertainment");
export function createLightGroup(): import("./groups/LightGroup");
export function createRoom(): import("./groups/Room");
export function createZone(): import("./groups/Zone");
export function createCLIPGenericFlagSensor(): import("./sensors/CLIPGenericFlag");
export function createCLIPGenericStatusSensor(): import("./sensors/CLIPGenericStatus");
export function createCLIPHumiditySensor(): import("./sensors/CLIPHumidity");
export function createCLIPLightlevelSensor(): import("./sensors/CLIPLightlevel");
export function createCLIPOpenCloseSensor(): import("./sensors/CLIPOpenClose");
export function createCLIPPresenceSensor(): import("./sensors/CLIPPresence");
export function createCLIPTemperatureSensor(): import("./sensors/CLIPTemperature");
export function createCLIPSwitchSensor(): import("./sensors/CLIPSwitch");
export function createLightScene(): import("./scenes/LightScene");
export function createGroupScene(): import("./scenes/GroupScene");
export function createSchedule(): import("./Schedule");
export namespace actions {
    export function light(light: any): import("./actions/LightStateAction");
    export function group(group: any): import("./actions/GroupStateAction");
    export function sensor(sensor: any): import("./actions/SensorStateAction");
    export function scene(scene: any): import("./actions/SceneAction");
}
export function createRule(): any;
export namespace ruleConditions {
    export function sensor_1(sensor: any): import("./rules/conditions/SensorCondition");
    export { sensor_1 as sensor };
    export function group_1(id: any): import("./rules/conditions/GroupCondition");
    export { group_1 as group };
}
export var ruleConditionOperators: typeof import("./rules/conditions/operators");
export namespace ruleActions {
    export function light_1(light: any): import("./actions/LightStateAction");
    export { light_1 as light };
    export function group_2(group: any): import("./actions/GroupStateAction");
    export { group_2 as group };
    export function sensor_2(sensor: any): import("./actions/SensorStateAction");
    export { sensor_2 as sensor };
    export function scene_1(scene: any): import("./actions/SceneAction");
    export { scene_1 as scene };
}
export function createResourceLink(): any;
export function createFromBridge(type: any, id: any, payload: any): any;
export function createFromJson(payload: any): any;
