export = SensorCondition;
declare class SensorCondition {
    constructor(sensor: any);
    _sensor: import("../../sensors/Sensor");
    _sensorStateAttribute: any;
    _operator: import("./operators/RuleConditionOperator") | null;
    _value: any;
    when(attribute: any): SelectOperator;
    getRuleCondition(): import("./RuleCondition");
    _setOperator(value: any): import("./SensorCondition");
    _setRequiredValue(value: any): import("./SensorCondition");
}
declare class SelectOperator {
    constructor(sensorCondition: any);
    _sensorCondition: any;
    equals(val: any): any;
    greaterThan(val: any): any;
    lessThan(val: any): any;
    changed(): any;
    changedDelayed(interval: any): any;
    stable(interval: any): any;
    notStable(interval: any): any;
    in(interval: any): any;
    notIn(interval: any): any;
}
