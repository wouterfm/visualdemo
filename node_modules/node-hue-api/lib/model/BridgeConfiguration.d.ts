export = BridgeConfiguration;
declare const BridgeConfiguration_base: typeof import("./BridgeObject");
declare class BridgeConfiguration extends BridgeConfiguration_base {
    set proxyport(arg: any);
    get proxyport(): any;
    set proxyaddress(arg: any);
    get proxyaddress(): any;
    set name(arg: any);
    get name(): any;
    set linkbutton(arg: any);
    get linkbutton(): any;
    set ipaddress(arg: any);
    get ipaddress(): any;
    set netmask(arg: any);
    get netmask(): any;
    set gateway(arg: any);
    get gateway(): any;
    set dhcp(arg: any);
    get dhcp(): any;
    set timezone(arg: any);
    get timezone(): any;
    set touchlink(arg: any);
    set zigbeechannel(arg: any);
    get zigbeechannel(): any;
    /**
     * Sets the time in UTC on the bridge, but only if there is internet connection (as it will use the internet for the time)
     * @param value An iso time format
     * @returns {BridgeObject}
     */
    set UTC(arg: any);
    get UTC(): any;
    get portalservices(): any;
    get portalconnection(): any;
    get portalstate(): any;
    get localtime(): any;
    get swupdate2(): any;
    get whitelist(): any;
    get internetservices(): any;
    get backup(): any;
    get apiversion(): any;
    get swversion(): any;
    get mac(): any;
    get modelid(): any;
    get bridgeid(): any;
    get factorynew(): any;
    get replacesbridgeid(): any;
    get datastoreversion(): any;
    get starterkitid(): any;
}
declare namespace BridgeConfiguration {
    export { Type };
}
type Type = import("../types/Type");
